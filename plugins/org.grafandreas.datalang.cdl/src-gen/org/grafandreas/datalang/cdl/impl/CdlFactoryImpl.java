/**
 * generated by Xtext 2.25.0
 */
package org.grafandreas.datalang.cdl.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.grafandreas.datalang.cdl.Attribute;
import org.grafandreas.datalang.cdl.CdlFactory;
import org.grafandreas.datalang.cdl.CdlPackage;
import org.grafandreas.datalang.cdl.EnumLiteral;
import org.grafandreas.datalang.cdl.IDField;
import org.grafandreas.datalang.cdl.RequirementType;
import org.grafandreas.datalang.cdl.SimpleType;
import org.grafandreas.datalang.cdl.SpecificationModel;
import org.grafandreas.datalang.cdl.Type;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class CdlFactoryImpl extends EFactoryImpl implements CdlFactory
{
  /**
	 * Creates the default factory implementation.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public static CdlFactory init()
  {
		try {
			CdlFactory theCdlFactory = (CdlFactory)EPackage.Registry.INSTANCE.getEFactory(CdlPackage.eNS_URI);
			if (theCdlFactory != null) {
				return theCdlFactory;
			}
		}
		catch (Exception exception) {
			EcorePlugin.INSTANCE.log(exception);
		}
		return new CdlFactoryImpl();
	}

  /**
	 * Creates an instance of the factory.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public CdlFactoryImpl()
  {
		super();
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public EObject create(EClass eClass)
  {
		switch (eClass.getClassifierID()) {
			case CdlPackage.SPECIFICATION_MODEL: return createSpecificationModel();
			case CdlPackage.PACKAGE: return createPackage();
			case CdlPackage.TYPE: return createType();
			case CdlPackage.REQUIREMENT_TYPE: return createRequirementType();
			case CdlPackage.ID_FIELD: return createIDField();
			case CdlPackage.ATTRIBUTE: return createAttribute();
			case CdlPackage.ENUM: return createEnum();
			case CdlPackage.ENUM_LITERAL: return createEnumLiteral();
			case CdlPackage.SIMPLE_TYPE: return createSimpleType();
			default:
				throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
		}
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public SpecificationModel createSpecificationModel()
  {
		SpecificationModelImpl specificationModel = new SpecificationModelImpl();
		return specificationModel;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public org.grafandreas.datalang.cdl.Package createPackage()
  {
		PackageImpl package_ = new PackageImpl();
		return package_;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Type createType()
  {
		TypeImpl type = new TypeImpl();
		return type;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public RequirementType createRequirementType()
  {
		RequirementTypeImpl requirementType = new RequirementTypeImpl();
		return requirementType;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public IDField createIDField()
  {
		IDFieldImpl idField = new IDFieldImpl();
		return idField;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Attribute createAttribute()
  {
		AttributeImpl attribute = new AttributeImpl();
		return attribute;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public org.grafandreas.datalang.cdl.Enum createEnum()
  {
		EnumImpl enum_ = new EnumImpl();
		return enum_;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public EnumLiteral createEnumLiteral()
  {
		EnumLiteralImpl enumLiteral = new EnumLiteralImpl();
		return enumLiteral;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public SimpleType createSimpleType()
  {
		SimpleTypeImpl simpleType = new SimpleTypeImpl();
		return simpleType;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public CdlPackage getCdlPackage()
  {
		return (CdlPackage)getEPackage();
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @deprecated
	 * @generated
	 */
  @Deprecated
  public static CdlPackage getPackage()
  {
		return CdlPackage.eINSTANCE;
	}

} //CdlFactoryImpl
