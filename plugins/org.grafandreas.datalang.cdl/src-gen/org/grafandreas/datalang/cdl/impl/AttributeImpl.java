/**
 * generated by Xtext 2.25.0
 */
package org.grafandreas.datalang.cdl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.xtext.common.types.JvmTypeReference;

import org.eclipse.xtext.xbase.XExpression;

import org.grafandreas.datalang.cdl.Attribute;
import org.grafandreas.datalang.cdl.CdlPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Attribute</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.grafandreas.datalang.cdl.impl.AttributeImpl#getType <em>Type</em>}</li>
 *   <li>{@link org.grafandreas.datalang.cdl.impl.AttributeImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.grafandreas.datalang.cdl.impl.AttributeImpl#getLowerBound <em>Lower Bound</em>}</li>
 *   <li>{@link org.grafandreas.datalang.cdl.impl.AttributeImpl#getDeclaredUpperBound <em>Declared Upper Bound</em>}</li>
 *   <li>{@link org.grafandreas.datalang.cdl.impl.AttributeImpl#getDefaultExpr <em>Default Expr</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AttributeImpl extends MinimalEObjectImpl.Container implements Attribute
{
  /**
	 * The cached value of the '{@link #getType() <em>Type</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getType()
	 * @generated
	 * @ordered
	 */
  protected JvmTypeReference type;

  /**
	 * The default value of the '{@link #getName() <em>Name</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getName()
	 * @generated
	 * @ordered
	 */
  protected static final String NAME_EDEFAULT = null;

  /**
	 * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getName()
	 * @generated
	 * @ordered
	 */
  protected String name = NAME_EDEFAULT;

  /**
	 * The default value of the '{@link #getLowerBound() <em>Lower Bound</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getLowerBound()
	 * @generated
	 * @ordered
	 */
  protected static final int LOWER_BOUND_EDEFAULT = 0;

  /**
	 * The cached value of the '{@link #getLowerBound() <em>Lower Bound</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getLowerBound()
	 * @generated
	 * @ordered
	 */
  protected int lowerBound = LOWER_BOUND_EDEFAULT;

  /**
	 * The default value of the '{@link #getDeclaredUpperBound() <em>Declared Upper Bound</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getDeclaredUpperBound()
	 * @generated
	 * @ordered
	 */
  protected static final int DECLARED_UPPER_BOUND_EDEFAULT = 0;

  /**
	 * The cached value of the '{@link #getDeclaredUpperBound() <em>Declared Upper Bound</em>}' attribute.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getDeclaredUpperBound()
	 * @generated
	 * @ordered
	 */
  protected int declaredUpperBound = DECLARED_UPPER_BOUND_EDEFAULT;

  /**
	 * The cached value of the '{@link #getDefaultExpr() <em>Default Expr</em>}' containment reference.
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @see #getDefaultExpr()
	 * @generated
	 * @ordered
	 */
  protected XExpression defaultExpr;

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  protected AttributeImpl()
  {
		super();
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  protected EClass eStaticClass()
  {
		return CdlPackage.Literals.ATTRIBUTE;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public JvmTypeReference getType()
  {
		return type;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetType(JvmTypeReference newType, NotificationChain msgs)
  {
		JvmTypeReference oldType = type;
		type = newType;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CdlPackage.ATTRIBUTE__TYPE, oldType, newType);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setType(JvmTypeReference newType)
  {
		if (newType != type) {
			NotificationChain msgs = null;
			if (type != null)
				msgs = ((InternalEObject)type).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CdlPackage.ATTRIBUTE__TYPE, null, msgs);
			if (newType != null)
				msgs = ((InternalEObject)newType).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CdlPackage.ATTRIBUTE__TYPE, null, msgs);
			msgs = basicSetType(newType, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, CdlPackage.ATTRIBUTE__TYPE, newType, newType));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public String getName()
  {
		return name;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setName(String newName)
  {
		String oldName = name;
		name = newName;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, CdlPackage.ATTRIBUTE__NAME, oldName, name));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public int getLowerBound()
  {
		return lowerBound;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setLowerBound(int newLowerBound)
  {
		int oldLowerBound = lowerBound;
		lowerBound = newLowerBound;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, CdlPackage.ATTRIBUTE__LOWER_BOUND, oldLowerBound, lowerBound));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public int getDeclaredUpperBound()
  {
		return declaredUpperBound;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setDeclaredUpperBound(int newDeclaredUpperBound)
  {
		int oldDeclaredUpperBound = declaredUpperBound;
		declaredUpperBound = newDeclaredUpperBound;
		if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, CdlPackage.ATTRIBUTE__DECLARED_UPPER_BOUND, oldDeclaredUpperBound, declaredUpperBound));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public XExpression getDefaultExpr()
  {
		return defaultExpr;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  public NotificationChain basicSetDefaultExpr(XExpression newDefaultExpr, NotificationChain msgs)
  {
		XExpression oldDefaultExpr = defaultExpr;
		defaultExpr = newDefaultExpr;
		if (eNotificationRequired()) {
			ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CdlPackage.ATTRIBUTE__DEFAULT_EXPR, oldDefaultExpr, newDefaultExpr);
			if (msgs == null) msgs = notification; else msgs.add(notification);
		}
		return msgs;
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void setDefaultExpr(XExpression newDefaultExpr)
  {
		if (newDefaultExpr != defaultExpr) {
			NotificationChain msgs = null;
			if (defaultExpr != null)
				msgs = ((InternalEObject)defaultExpr).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CdlPackage.ATTRIBUTE__DEFAULT_EXPR, null, msgs);
			if (newDefaultExpr != null)
				msgs = ((InternalEObject)newDefaultExpr).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CdlPackage.ATTRIBUTE__DEFAULT_EXPR, null, msgs);
			msgs = basicSetDefaultExpr(newDefaultExpr, msgs);
			if (msgs != null) msgs.dispatch();
		}
		else if (eNotificationRequired())
			eNotify(new ENotificationImpl(this, Notification.SET, CdlPackage.ATTRIBUTE__DEFAULT_EXPR, newDefaultExpr, newDefaultExpr));
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
		switch (featureID) {
			case CdlPackage.ATTRIBUTE__TYPE:
				return basicSetType(null, msgs);
			case CdlPackage.ATTRIBUTE__DEFAULT_EXPR:
				return basicSetDefaultExpr(null, msgs);
		}
		return super.eInverseRemove(otherEnd, featureID, msgs);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
		switch (featureID) {
			case CdlPackage.ATTRIBUTE__TYPE:
				return getType();
			case CdlPackage.ATTRIBUTE__NAME:
				return getName();
			case CdlPackage.ATTRIBUTE__LOWER_BOUND:
				return getLowerBound();
			case CdlPackage.ATTRIBUTE__DECLARED_UPPER_BOUND:
				return getDeclaredUpperBound();
			case CdlPackage.ATTRIBUTE__DEFAULT_EXPR:
				return getDefaultExpr();
		}
		return super.eGet(featureID, resolve, coreType);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void eSet(int featureID, Object newValue)
  {
		switch (featureID) {
			case CdlPackage.ATTRIBUTE__TYPE:
				setType((JvmTypeReference)newValue);
				return;
			case CdlPackage.ATTRIBUTE__NAME:
				setName((String)newValue);
				return;
			case CdlPackage.ATTRIBUTE__LOWER_BOUND:
				setLowerBound((Integer)newValue);
				return;
			case CdlPackage.ATTRIBUTE__DECLARED_UPPER_BOUND:
				setDeclaredUpperBound((Integer)newValue);
				return;
			case CdlPackage.ATTRIBUTE__DEFAULT_EXPR:
				setDefaultExpr((XExpression)newValue);
				return;
		}
		super.eSet(featureID, newValue);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public void eUnset(int featureID)
  {
		switch (featureID) {
			case CdlPackage.ATTRIBUTE__TYPE:
				setType((JvmTypeReference)null);
				return;
			case CdlPackage.ATTRIBUTE__NAME:
				setName(NAME_EDEFAULT);
				return;
			case CdlPackage.ATTRIBUTE__LOWER_BOUND:
				setLowerBound(LOWER_BOUND_EDEFAULT);
				return;
			case CdlPackage.ATTRIBUTE__DECLARED_UPPER_BOUND:
				setDeclaredUpperBound(DECLARED_UPPER_BOUND_EDEFAULT);
				return;
			case CdlPackage.ATTRIBUTE__DEFAULT_EXPR:
				setDefaultExpr((XExpression)null);
				return;
		}
		super.eUnset(featureID);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public boolean eIsSet(int featureID)
  {
		switch (featureID) {
			case CdlPackage.ATTRIBUTE__TYPE:
				return type != null;
			case CdlPackage.ATTRIBUTE__NAME:
				return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
			case CdlPackage.ATTRIBUTE__LOWER_BOUND:
				return lowerBound != LOWER_BOUND_EDEFAULT;
			case CdlPackage.ATTRIBUTE__DECLARED_UPPER_BOUND:
				return declaredUpperBound != DECLARED_UPPER_BOUND_EDEFAULT;
			case CdlPackage.ATTRIBUTE__DEFAULT_EXPR:
				return defaultExpr != null;
		}
		return super.eIsSet(featureID);
	}

  /**
	 * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
	 * @generated
	 */
  @Override
  public String toString()
  {
		if (eIsProxy()) return super.toString();

		StringBuilder result = new StringBuilder(super.toString());
		result.append(" (name: ");
		result.append(name);
		result.append(", lowerBound: ");
		result.append(lowerBound);
		result.append(", declaredUpperBound: ");
		result.append(declaredUpperBound);
		result.append(')');
		return result.toString();
	}

} //AttributeImpl
